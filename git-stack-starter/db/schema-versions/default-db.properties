#-------------------------------------------------------------------------------------------------------------------
#
#    Stack Database Versioning Tool Configuration File
#    Comments in java property files start with #.  However, as a convention, in this file the
#    comments start with #-- for easy identification of comments and commented-out-properties.
#    Author: Monal Daxini
#-------------------------------------------------------------------------------------------------------------------

#-- Comma-delimited schemas to migrate, or, to run scripts on. The order in which the schemas
#-- are specified here, is the same order in which the operations will be performed on schemas.
schemasToMigrate = DEFAULT

                          #-- #tablespaceForData = USERS
#tablespaceForIndexes = USERS
#owningSchema = DEFAULT
#passThroughAccount = DEFAULT_PTA
#roleForPassThroughAccount = DEFAULT_ROLE

                          #--                           #-- #-- Version to migrate to... omit or leave blank to migrate to latest version
#DEFAULT.targetVersion =

#-- The specified comma-delimited scripts are always run regardless of whether the database is up to date,
#-- or, needs to be migrated, i.e., updated by running the latest scripts. Use these when you always want
#-- to run the script when the database tool is run. These are always run BEFORE any other scripts are run.
#-- It is strongly recommended that as a convention the names of these scripts start with always-pre.
#SPS_CTIN.alwaysRunPreScripts =
#-- The specified comma-delimited scripts are always run regardless of whether the database is up to date,
#-- or, needs to be migrated, i.e., updated by running the latest scripts. Use these when you always want
#-- to run the script when the database tool is run. These are always run AFTER all the other scripts are run.
#-- It is strongly recommended that as a convention the names of these scripts start with always-post.
#-- If its a script that needs to run both pre and post run pre and post script then start the name with just always.
#SPS_CTIN.alwaysRunPostScripts =

#-- The specified comma-delimited scripts are run after every forward script (after every version upgrade).
#-- These are run in the order specified, and only if the schema version is NOT up to date.
#SPS_CTIN.extraForwardScripts  =
#-- The specified comma-delimited scripts are run after every reverse script (after every version downgrade).
#-- These are run in the order specified, and only if the schema version is NOT up to date.
#SPS_CTIN.extraReverseScripts  =

#-- Scripts to run BEFORE all migrations, forward or reverse, and not before each version.
#-- These are run in the order specified, and only if the schema version is NOT up to date.
#SPS_CTIN.preScripts = pre.sql
#-- Scripts to run AFTER all migrations, forward or reverse, and not before each version.
#-- These are run in the order specified, and only if the schema version is NOT up to date.
#SPS_CTIN.postScripts = post.sql

#-- JDBC Connection Information

DEFAULT.jdbcDriver = oracle.jdbc.OracleDriver
DEFAULT.jdbcUrl = jdbc:oracle:thin:@192.168.56.101:1521:xe
DEFAULT.username = oracle
#-- If the following property is commented or left blank, then the user is prompted for password at runtime.
DEFAULT.password = oracle


#-- The name of the schema in the schema info table. Use this when you have multiple
#-- projects share the same schema, and use the database versioning tool.
#-- Format: schemaName.schemaInfoTableUniqueName
#-- If this property is not present then the schema name - DEFAULT -(same as the folder name), will be used.
#-- Do not change the value once set, else the versioning will not work correctly, unless
#-- the name is also changed in the database manually
DEFAULT.schemaInfoTableUniqueName=DEFAULT


                          #-- #-- The property determines if the SCHEMA_INFO table is created or not. Default value of the property if commented:  yes
#-- This should only be used, if ever, for pass through schemas where the schema priviledges for the user does not
#-- allow the creation of the SCHEMA_INFO table. Use of this should be a RARE EXCEPTION and NOT the NORM.
#DEFAULT.useSchemaInfoTable = no
#-- Used for manual version control when a SCHEMA_INFO cannot be created. This property
#-- has to be manually updated when the versions are updated.
#DEFAULT.currentVersion =

                          #-- #-- The tool prompts to proceed before migrating the schema from the current version to the latest or specified version.
#-- Default value of the property if commented = yes
db.prompt = no
#-- If true displays the SQL statement on the console before executing against the database.
#-- Default value of the property if commented = false
#db.showSQL = true
#-- If true displays a warning message if the version numbers are not sequential.
#-- Default value of the property if commented = true
#db.showVersionSkippedWarning = false
#-- When set to true, this creates a table in the schema and logs details about every SQL statement executed against the database.
#-- Default value of the property if commented = false
#db.schemaBuildLogEnabled = true
#-- Must use the default value - this is the operating system user name who is executing the database versioning tool.
#user.name =
#-- If not specified then "drop.sql" is the default script that is run when db:drop goal is executed.
#db.dropScript =
#-- If not specified then "truncate.sql" is the default script that is run when db:truncate goal is executed.
#db.truncateScript =
#-- A script file must be specified when db:execute goal is executed, otherwise an error will be thrown.
#db.scriptToExecute =

                          #-- #-- Enable the dbms_output buffer, so that messages written using dbms_output.putLine procedure can be retrieved.
#-- Disabled by default. The value is false. Possible values are true or false.
#db.dbmsOutputEnabled=false

#-- Size of the dbms_output buffer in oracle. In Oracle 9i, when this is enabled
#-- the default value is 20,000. However in Oracle 10i the size in unlimited. If dbms_output
#-- is 1000000 (1 million bytes). This is represented by a long (64-bit whole number)
#db.dbmsOutputBufferSize=1000000